@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@inject CounterService CounterService
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor Course @AppState.Counter - @CounterService.Counter</a>
    </div>
</div>

@code {

    protected override void OnInitialized()
    {
        base.OnInitialized();
        AppState.CountHasChanged += StateHasChanged;

        CounterService.CountHasChanged += StateHasChanged;
    }

}


<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

@* *@
@* <FluentTreeView> *@
@*     @foreach (var routeInfo in _pagesWithFirstRoute) *@
@*     { *@
@*         switch (routeInfo) *@
@*         { *@
@*             case PrerenderRouteHelper.RouteInfo info: *@
@*             { *@
@*                 var current = info; *@
@*                 var fullBaseName = current.Fullname.Replace("BlazorCourse.Components.Pages.", string.Empty); *@
@*                 <FluentTreeItem Text="@fullBaseName" @onclick=@(()=> NavigationManager.NavigateTo(current.FirstRoute) )> *@
@*                     <FluentIcon *@
@*                         Value="@(new Icons.Filled.Size16.Globe())" Color="@Color.Neutral" Slot="start"></FluentIcon> *@
@*                 </FluentTreeItem> *@
@*                 break; *@
@*             } *@
@*             case PrerenderRouteHelper.DirectoryNode directoryNode: *@
@*                 <FluentTreeItem Text="@directoryNode.Name"  )> *@
@*                     <FluentIcon *@
@*                         Value="@(new Icons.Filled.Size16.VehicleCarProfile())" Color="@Color.Neutral" Slot="start"></FluentIcon> *@
@*                 </FluentTreeItem> *@
@*                 break; *@
@*         } *@
@*     } *@
@* </FluentTreeView> *@


@code {
    // private List<PrerenderRouteHelper.RouteNode> _pagesWithFirstRoute = null!;
    //
    //
    // protected override void OnInitialized()
    // {
    //     base.OnInitialized();
    //     
    //     _pagesWithFirstRoute = PrerenderRouteHelper.GetRoutesToRender(Assembly.GetAssembly(typeof(PrerenderRouteHelper)));
    // }

}

@code {
    // public IEnumerable<string> GetRoutableComponentNamesForMenu()
    // {
    //     var allComponents = Assembly
    //         .GetExecutingAssembly()
    //         .ExportedTypes
    //         .Where(t => t.IsSubclassOf(typeof(ComponentBase)));
    //
    //     var routableComponents = allComponents
    //         .Where(c => c
    //             .GetCustomAttributes(inherit: true)
    //             .OfType<RouteAttribute>()
    //             .Count() > 0);
    //
    //
    //     foreach (var routableComponent in routableComponents)
    //     {
    //         yield return routableComponent
    //             .ToString()
    //             .Replace("BlazorCourse.Components.Pages.", string.Empty);
    //         // you need to adjust the following!
    //         //.
    //     }
    // }
}

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @* @foreach (var routes in PrerenderRouteHelper.GetRoutesToRender(Assembly.GetAssembly(typeof(PrerenderRouteHelper)))) *@
        @* { *@
        @*     <div class="nav-item px-3"> *@
        @*         <NavLink class="nav-link" href="@routes"> *@
        @*             <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> @routes *@
        @*         </NavLink> *@
        @*     </div>     *@
        @* } *@

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="tictactoe">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Tic Tac Toe
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="todo">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Todo
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="bier">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Bier
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="brouwer">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Brouwer
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="RazorSyntax">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Razor Syntax
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="DataBinding">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Data Binding
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter-component-state">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>counter-component-state
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter-state-static-variable">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>counter-state-static-variable
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter-cascade-state">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>counter-cascade-state
            </NavLink>
        </div>


        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter-state-service">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>counter-state-service
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="data-binding-object-example">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Data Binding Object Example
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="SomePageComponent">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>SomePageComponent
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="todolist">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>Todo List
            </NavLink>
        </div>
    </nav>
</div>

@code {
    [CascadingParameter] public AppState AppState { get; set; } = null!;
}