@page "/blazorise-datagrid"
@using BlazorCourse.Components.Pages.Databases.BierExample.Model
@using BlazorCourse.Components.Pages.Databases.BierExample.Repository
@using global::Blazorise.DataGrid
@using global::Blazorise

@* @using globalBlazorise.DataGrid *@
<h3>blazorise_datagrid</h3>

@* <Badge Color="Color.Primary">Hello</Badge> *@

<DataGrid TItem="Beer"
          Data="@_bieren"
          ReadData="args => OnReadData(args)"
          TotalItems="@_totalItems"
          PageSize="10"
          Sortable
          ShowPager
          Responsive
          SortMode="DataGridSortMode.Single">
    <DataGridCommandColumn/>
    <DataGridColumn Field="@nameof(Beer.Name)" Caption="Naam"/>
    <DataGridColumn Field="@nameof(Beer.Alcohol)" Caption="Alcohol"/>
    <DataGridColumn Field="@nameof(Beer.Style)" Caption="Stijl"/>
</DataGrid>

@code {
    private List<Beer>? _bieren;
    private int? _totalItems;

    private void OnReadData(DataGridReadDataEventArgs<Beer> e)
    {
        var pageFilterSorting = new PageFilterSorting
        {
            CurrentPage = e.Page,
            PageSize = e.PageSize
        };

        // Todo: vervangen voor foreach loop ipv linq
        var orderBy = e.Columns
            .Where(c => c.SortDirection != SortDirection.Default)
            .Select(c =>
                new
                {
                    c.Field,
                    SortDirection = c.SortDirection == SortDirection.Ascending ? "asc" : "desc"
                }).FirstOrDefault();

        if (orderBy == null)
        {
            pageFilterSorting.OrderBy = "Naam";
            pageFilterSorting.Dir = "asc";
        }
        else
        {
            pageFilterSorting.OrderBy = orderBy.Field;
            pageFilterSorting.Dir = orderBy.SortDirection;
        }

        var pagedResult = new BierRepository().Get(pageFilterSorting);
        _bieren = pagedResult.Items;
        _totalItems = pagedResult.TotalItems;
    }


}