<div class="card">
    <div class="card-body">
        <h5 class="card-title"> 
            @if (TitleContent != null)
            {
                @TitleContent(Item)
            }
            else
            {
                @Item.Description
            }
        </h5>
        <div class="card-body">
            <button class="btn btn-primary" @onclick="ToggleDetails">ToggleDetails</button>
            <button class="btn btn-danger" @onclick="@(() => DeleteItem(Item))">Delete</button>
        </div>
    </div>
    <div class="card-footer">
        @if (_showDetails)
        {
            <TodoDetails TodoItem="Item"></TodoDetails>
        }
    </div>
</div>

@code {
    [Parameter] [EditorRequired] public TodoItem Item { get; set; } = null!;

    [Parameter] [EditorRequired] public EventCallback<TodoItem> OnDeleteItem { get; set; }

    [Parameter] public RenderFragment<TodoItem>? TitleContent { get; set; }

    private void DeleteItem(TodoItem item)
    {
        // Call the delete method from the parent component
        OnDeleteItem.InvokeAsync(item);
    }

    private bool _showDetails = false;

    private void ToggleDetails()
    {
        _showDetails = !_showDetails;
    }

}