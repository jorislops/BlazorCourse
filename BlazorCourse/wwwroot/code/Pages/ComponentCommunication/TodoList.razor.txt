@page "/todo-list"
<h3>Todo List</h3>

@if (_todos.Count == 0)
{
    <p>No items found</p>
}
else
{
    @foreach (var todo in _todos)
    {
        <TodoCard Item="todo" OnDeleteItem="DeleteTodoItem" @key="todo.Id">
            <TitleContent>
                @if (todo.IsDone)
                {
                    <del>@todo.Title</del>
                    
                }
                else
                {
                    @todo.Title
                }
            </TitleContent>
        </TodoCard>
        <br/>
    }
}
<hr/>
<button class="btn btn-primary"
        @onclick="@(() => _addTodoForm.ToggleVisibility())">
    Add
</button>
<AddTodoForm
    @ref="_addTodoForm"
    OnAdd="AddNewTodo">
</AddTodoForm>

@code {
    private List<TodoItem> _todos = new();
    private AddTodoForm _addTodoForm = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _todos = new List<TodoItem>
        {
            new()
            {
                Id = 1, Title = "Buy groceries", 
                        Description = "Don't forget the milk, bread, and eggs",
                Items = new List<TodoItem>
                {
                    new() { Id = 6, Title = "Milk" },
                    new() { Id = 7, Title = "Bread" },
                    new() { Id = 8, Title = "Eggs" }
                }
            },
            new()
            {
                Id = 2, Title = "Do laundry", IsDone = true, 
                    Description = "Separate whites and colors",
                Items = new List<TodoItem>
                {
                    new() { Id = 9, Title = "Whites", IsDone = true  },
                    new() { Id = 10, Title = "Colors", IsDone = true }
                }
            },
            new() { Id = 3, Title = "Clean the house", Description = "Vacuum and dust"},
            new() { Id = 4, Title = "Cook dinner", Description = "Spaghetti and meatballs"},
            new() { Id = 5, Title = "Wash the car", Description = "Don't forget to wax it"}
        };
    }

    private void DeleteTodoItem(TodoItem todoItem)
    {
        _todos.Remove(todoItem);
    }

    private void AddNewTodo(TodoItem newTodoItem)
    {
        newTodoItem.Id = _todos.Max(x => x.Id) + 1;
        _todos.Add(newTodoItem);
    }
}